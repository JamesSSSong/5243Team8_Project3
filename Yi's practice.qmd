---
title: "5243 Project 3"
format: html
editor: visual
---

```{r}
library(dplyr)
```

```{r}
#Data preprocess
data<-read.csv("~/Downloads/download.csv",skip = 6,row.names = NULL)
data2<-read.csv("~/Downloads/download (1).csv",skip = 6,row.names = NULL)
colnames(data) <- c('name','group','session','event','active_user','user','bounce_rate','session_time' )
n_session<- data[1,3]
n_event<-data2[1,4]
n_active_user = data2[1,5]
n_user = data2[1,6]
na_session<-data2[3,4]
na_event<-data2[3,5]
nb_session<-data2[4,4]
nb_event<-data2[4,5]
df1<-data[-1,-9]
df1<-df1[df1$group %in% c("A", "B"), ]
dfa<-df1[df1$group == "A",]
dfb<-df1[df1$group == "B",]
rownames(df1) <- NULL  
rownames(dfa) <- NULL  
rownames(dfb) <- NULL  
```

```{r}
#I use CTR = session / total number of session
dfa$CTR = dfa$session / na_session
dfb$CTR = dfb$session / nb_session
dfa$total_session <- rep(na_session,length(dfa$name))
dfb$total_session <- rep(nb_session,length(dfb$name))
df_ab <- rbind(dfa, dfb)
```

```{r}
dfa
dfb
```

```{r}
#CTR
#data prepare for CTR. At this time, some sessions is still null. 
#Avoid error in test, only choose data that group a and b both have
common_names <- intersect(dfa$name, dfb$name)
dfa_ctr <- dfa[dfa$name %in% common_names, ]
dfb_ctr <- dfb[dfb$name %in% common_names, ]
df_ctr <- rbind(dfa_ctr, dfb_ctr)

results_ctr_prop <- df_ctr %>%
  group_by(name) %>%
  reframe({
    test <- prop.test(session, total_session)
    data.frame(
      CTR_A = session[group == "A"] / total_session[group == "A"],
      CTR_B = session[group == "B"] / total_session[group == "B"],
      p_value = test$p.value,
      ci_low = test$conf.int[1],
      ci_high = test$conf.int[2]
    )
  })
```

```{r}
results_ctr_prop
results_ctr_prop$name[results_ctr_prop$p_value < 0.05]
```

```{r}
#The warn in prop shows some session value is too samll. make the X^2 approx. incorrect
#I will try fisher to avoid this problem
results_ctr_fisher <- df_ctr %>%
  group_by(name) %>%
  reframe({
      clicks <- session
      non_clicks <- total_session - session
      mat <- matrix(c(clicks, non_clicks), nrow = 2)
      test <- fisher.test(mat)
      out <- data.frame(
        CTR_A = clicks[group == "A"] / total_session[group == "A"],
        CTR_B = clicks[group == "B"] / total_session[group == "B"],
        p_value = test$p.value
      )
    }
  )
```

```{r}
results_ctr_fisher
results_ctr_fisher$name[results_ctr_fisher$p_value < 0.05]
```
